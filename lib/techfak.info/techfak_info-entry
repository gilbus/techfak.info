#!/usr/bin/env python3
"""
Makes it possible to call the entry REPL directly, dumping the output to STDOUT
"""

from argparse import ArgumentParser, FileType
from typing import List, TextIO

try:
    from colorama import init, deinit
except ImportError:
    exit('This package requires python(3)-colorama, please install it.')

from techfak_info.repl_lib import repl_menu
from techfak_info.Entry import Entry

__author__ = 'tl'

ERROR_ON_ABORT = False


def main() -> None:
    parser = ArgumentParser(description="""Runs the REPL of techfak.info locally and outputs the collected entries
        to STDOUT""", epilog='GPLv3 @ tl')
    parser.add_argument('-l', '--local-entries', type=FileType('r'), nargs='?',
                        help='Loads the entries from the local file if given and uses no existing entries if not.',
                        )
    parser.add_argument('-o', '--output_file', type=FileType('w'), default='-',
                        help="Path to file to write the output to.")
    parser.add_argument('--error-on-abort', action='store_true',
                        help="Do not exit with code 0 if terminated via Ctrl+c")

    args = parser.parse_args()
    local_file = args.local_entries  # type: TextIO
    global ERROR_ON_ABORT
    ERROR_ON_ABORT = args.error_on_abort

    if local_file:
        current_entries = Entry.from_jsonfeed(local_file.read())  # type: List[Entry]
    else:
        current_entries = []

    entry_to_print = repl_menu(current_entries)
    # end colorama support for terminal
    deinit()
    args.output_file.write(entry_to_print)


if __name__ == '__main__':
    init()
    try:
        main()
    except KeyboardInterrupt:
        if ERROR_ON_ABORT:
            exit(1)
        else:
            exit(0)
    finally:
        print('\nGoodbye.')
        deinit()

